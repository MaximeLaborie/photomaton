<Window x:Class="photomaton.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:behaviors="clr-namespace:photomaton.Behaviors"
        xmlns:controls="clr-namespace:photomaton.Controls"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:photomaton"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:media="clr-namespace:System.Windows.Media;assembly=PresentationCore"
        xmlns:mvvm="clr-namespace:Prism.Mvvm;assembly=Prism.Wpf"
        xmlns:photomaton="clr-namespace:photomaton"
        xmlns:viewmodels="clr-namespace:photomaton.ViewModels"
        xmlns:views="clr-namespace:photomaton.Views"
        xmlns:wpfmediakit="clr-namespace:WPFMediaKit.DirectShow.Controls;assembly=WPFMediaKit"
        Title="{Binding Title}"
        Width="500"
        Height="500"
        behaviors:TakeWebcamShotBehavior.IsGettingImage="{Binding IsWaitingCameraShot}"
        mvvm:ViewModelLocator.AutoWireViewModel="True"
        Background="Black"
        Cursor="{Binding IsRunningCapture,
                         Converter={StaticResource InverseBoolToNoMouseConverter}}"
        ResizeMode="{Binding IsFullScreen,
                             Converter={StaticResource FullscreenToResizeModeConverter}}"
        WindowState="{Binding IsFullScreen,
                              Converter={StaticResource FullscreenToWindowStateConverter}}"
        WindowStyle="{Binding IsFullScreen,
                              Converter={StaticResource FullscreenToWindowStyleConverter}}"
        mc:Ignorable="d">
    <Grid>
        <wpfmediakit:VideoCaptureElement x:Name="videoCapElement"
                                         DesiredPixelHeight="1024"
                                         DesiredPixelWidth="1280"
                                         EnableSampleGrabbing="True"
                                         FPS="30"
                                         LoadedBehavior="Play"
                                         Stretch="{Binding Path=Stretch}"
                                         VideoCaptureSource="{Binding Path=CaptureDevice.Name}" />

        <TextBlock VerticalAlignment="Center"
                   FontSize="300"
                   Foreground="#8a18eb"
                   Text="{Binding Countdown}"
                   TextAlignment="Center" />

        <controls:CircularProgress Width="300"
                                   Height="300"
                                   Margin="5"
                                   HorizontalAlignment="Center"
                                   Visibility="{Binding DelayBeforeShot,
                                                        Converter={StaticResource VisibleIfGreaterThanZeroConverter}}"
                                   Value="{Binding DelayBeforeShot}">
            <controls:CircularProgress.Fill>
                <SolidColorBrush Opacity=".25" Color="#8a18eb" />
            </controls:CircularProgress.Fill>
            <controls:CircularProgress.Stroke>
                <SolidColorBrush Opacity=".25" Color="#8a18eb" />
            </controls:CircularProgress.Stroke>
        </controls:CircularProgress>

        <Border Background="White" Visibility="{Binding IsWaitingCameraShot, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Border.Style>
                <Style>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsVisible}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation AutoReverse="True"
                                                         BeginTime="0:0:0"
                                                         Duration="0:0:0.1"
                                                         From="0"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>

        <Image Margin="100"
               Source="{Binding LastMerge}"
               Visibility="{Binding IsShowingMerge,
                                    Converter={StaticResource BooleanToVisibilityConverter}}" />

        <Button Canvas.Left="0"
                Canvas.Top="0"
                Width="{Binding RelativeSource={RelativeSource TemplatedParent},
                                Path=ActualWidth}"
                Height="{Binding RelativeSource={RelativeSource TemplatedParent},
                                 Path=ActualHeight}"
                Command="{Binding Path=CaptureCommand}"
                Style="{DynamicResource alphaButton}"
                Visibility="{Binding IsRunningCapture,
                                     Converter={StaticResource InverseBooleanToVisibilityConverter}}">
            <Image MaxWidth="500"
                   MaxHeight="500"
                   Margin="50"
                   Source="/Images/hand.png">
                <Image.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsVisible}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard Duration="0:0:11" RepeatBehavior="Forever">
                                            <DoubleAnimation BeginTime="0:0:0"
                                                             Duration="0:0:1"
                                                             From="0.2"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="1" />
                                            <DoubleAnimation AutoReverse="True"
                                                             BeginTime="0:0:1"
                                                             Duration="0:0:1"
                                                             From="1"
                                                             RepeatBehavior="3x"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="0.5" />
                                            <DoubleAnimation BeginTime="0:0:7"
                                                             Duration="0:0:2"
                                                             From="1"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
        </Button>

        <Canvas>
            <Button Canvas.Right="10"
                    Canvas.Bottom="10"
                    Width="30"
                    Height="30"
                    Command="{Binding Path=ToggleFullScreenCommand}"
                    Style="{DynamicResource alphaButton}">
                <Image Source="/Images/fullscreen.png" />
            </Button>
            <Button Canvas.Top="10"
                    Canvas.Right="10"
                    Width="30"
                    Height="30"
                    Command="{Binding Path=OpenStretchOptionsCommand}"
                    Style="{DynamicResource alphaButton}">
                <Image Source="/Images/stretch.png" />
            </Button>
            <Button Canvas.Left="10"
                    Canvas.Bottom="10"
                    Width="30"
                    Height="30"
                    Command="wpfmediakit:VideoCaptureElement.ShowPropertyPagesCommand"
                    CommandTarget="{Binding ElementName=videoCapElement}"
                    Style="{DynamicResource alphaButton}">
                <Image Source="/Images/settings.png" />
            </Button>
            <Button Canvas.Left="10"
                    Canvas.Top="10"
                    Width="30"
                    Height="30"
                    Command="{Binding Path=OpenSettingsCommand}"
                    Style="{DynamicResource alphaButton}">
                <Image Source="/Images/camera.png" />
            </Button>
        </Canvas>

        <Border Width="300"
                Height="350"
                Background="White"
                BorderBrush="Black"
                BorderThickness="1"
                Visibility="{Binding AreSettingsOpen,
                                     Converter={StaticResource BooleanToVisibilityConverter}}">
            <ItemsControl HorizontalAlignment="Stretch" ItemsSource="{Binding CaptureDevices}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Button Height="40"
                                Margin="4"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                BorderBrush="Transparent"
                                Command="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                 AncestorType={x:Type ItemsControl}},
                                                  Path=DataContext.ChangeDeviceCommand}"
                                CommandParameter="{Binding}">
                            <TextBlock Text="{Binding Name}" />
                        </Button>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Border>

        <Border Width="300"
                Height="350"
                Background="White"
                BorderBrush="Black"
                BorderThickness="1"
                Visibility="{Binding IsStretchMenuOpen,
                                     Converter={StaticResource BooleanToVisibilityConverter}}">
            <ItemsControl HorizontalAlignment="Stretch" ItemsSource="{Binding AvailableStretchModes}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Button Height="40"
                                Margin="4"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                BorderBrush="Transparent"
                                Command="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                 AncestorType={x:Type ItemsControl}},
                                                  Path=DataContext.ToggleStretchCommand}"
                                CommandParameter="{Binding}">
                            <TextBlock Text="{Binding Name}" />
                        </Button>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Border>

    </Grid>
</Window>